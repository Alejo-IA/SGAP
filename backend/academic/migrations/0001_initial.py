# Generated by Django 4.2.9 on 2025-05-10 00:26

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rol', models.CharField(choices=[('profesor', 'Profesor'), ('estudiante', 'Estudiante')], max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='usuario_groups', related_query_name='usuario', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='usuario_permissions', related_query_name='usuario', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo_estudiante', models.CharField(max_length=20, unique=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'estudiantes',
            },
        ),
        migrations.CreateModel(
            name='Evaluacion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('porcentaje', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('fecha', models.DateField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'evaluaciones',
            },
        ),
        migrations.CreateModel(
            name='Materia',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'materias',
            },
        ),
        migrations.CreateModel(
            name='Profesor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('departamento', models.CharField(blank=True, max_length=100, null=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'profesores',
            },
        ),
        migrations.CreateModel(
            name='ProfesorMateria',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True)),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.materia')),
                ('profesor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.profesor')),
            ],
            options={
                'db_table': 'profesor_materia',
                'unique_together': {('profesor', 'materia')},
            },
        ),
        migrations.CreateModel(
            name='Nota',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nota', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobado', 'Aprobado'), ('reprobado', 'Reprobado')], default='pendiente', max_length=20)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.estudiante')),
                ('evaluacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.evaluacion')),
            ],
            options={
                'db_table': 'notas',
                'unique_together': {('evaluacion', 'estudiante')},
            },
        ),
        migrations.AddField(
            model_name='materia',
            name='profesores',
            field=models.ManyToManyField(through='academic.ProfesorMateria', to='academic.profesor'),
        ),
        migrations.CreateModel(
            name='LogNota',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('valor_anterior', models.DecimalField(decimal_places=2, max_digits=4, null=True)),
                ('valor_nuevo', models.DecimalField(decimal_places=2, max_digits=4)),
                ('fecha_cambio', models.DateTimeField(auto_now_add=True)),
                ('nota', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.nota')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'log_notas',
            },
        ),
        migrations.AddField(
            model_name='evaluacion',
            name='materia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.materia'),
        ),
        migrations.CreateModel(
            name='Matricula',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fecha_matricula', models.DateTimeField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('activa', 'Activa'), ('retirada', 'Retirada'), ('finalizada', 'Finalizada')], default='activa', max_length=20)),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.estudiante')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.materia')),
            ],
            options={
                'db_table': 'matriculas',
                'unique_together': {('estudiante', 'materia')},
            },
        ),
    ]
